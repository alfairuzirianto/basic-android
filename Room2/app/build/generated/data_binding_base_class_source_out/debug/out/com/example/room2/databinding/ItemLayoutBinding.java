// Generated by data binding compiler. Do not edit!
package com.example.room2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.room2.Mahasiswa;
import com.example.room2.OnClickItemInterface;
import com.example.room2.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemLayoutBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final TextView tvNama;

  @NonNull
  public final View view;

  @Bindable
  protected Mahasiswa mMahasiswa;

  @Bindable
  protected OnClickItemInterface mListener;

  protected ItemLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imgDelete, ImageView imgEdit, TextView tvNama, View view) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgDelete = imgDelete;
    this.imgEdit = imgEdit;
    this.tvNama = tvNama;
    this.view = view;
  }

  public abstract void setMahasiswa(@Nullable Mahasiswa mahasiswa);

  @Nullable
  public Mahasiswa getMahasiswa() {
    return mMahasiswa;
  }

  public abstract void setListener(@Nullable OnClickItemInterface listener);

  @Nullable
  public OnClickItemInterface getListener() {
    return mListener;
  }

  @NonNull
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemLayoutBinding>inflateInternal(inflater, R.layout.item_layout, root, attachToRoot, component);
  }

  @NonNull
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemLayoutBinding>inflateInternal(inflater, R.layout.item_layout, null, false, component);
  }

  public static ItemLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemLayoutBinding)bind(component, view, R.layout.item_layout);
  }
}
