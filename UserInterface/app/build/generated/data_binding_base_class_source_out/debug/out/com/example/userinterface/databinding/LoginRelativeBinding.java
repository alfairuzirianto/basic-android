// Generated by view binder compiler. Do not edit!
package com.example.userinterface.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.userinterface.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginRelativeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etUsername;

  @NonNull
  public final ImageView imgLogo;

  @NonNull
  public final TextView tvForgot;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView tvShow;

  @NonNull
  public final TextView tvSignup;

  private LoginRelativeBinding(@NonNull RelativeLayout rootView, @NonNull Button btnLogin,
      @NonNull EditText etPassword, @NonNull EditText etUsername, @NonNull ImageView imgLogo,
      @NonNull TextView tvForgot, @NonNull TextView tvLogin, @NonNull TextView tvShow,
      @NonNull TextView tvSignup) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etPassword = etPassword;
    this.etUsername = etUsername;
    this.imgLogo = imgLogo;
    this.tvForgot = tvForgot;
    this.tvLogin = tvLogin;
    this.tvShow = tvShow;
    this.tvSignup = tvSignup;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginRelativeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginRelativeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_relative, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginRelativeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etUsername;
      EditText etUsername = ViewBindings.findChildViewById(rootView, id);
      if (etUsername == null) {
        break missingId;
      }

      id = R.id.imgLogo;
      ImageView imgLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgLogo == null) {
        break missingId;
      }

      id = R.id.tvForgot;
      TextView tvForgot = ViewBindings.findChildViewById(rootView, id);
      if (tvForgot == null) {
        break missingId;
      }

      id = R.id.tvLogin;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.tv_show;
      TextView tvShow = ViewBindings.findChildViewById(rootView, id);
      if (tvShow == null) {
        break missingId;
      }

      id = R.id.tvSignup;
      TextView tvSignup = ViewBindings.findChildViewById(rootView, id);
      if (tvSignup == null) {
        break missingId;
      }

      return new LoginRelativeBinding((RelativeLayout) rootView, btnLogin, etPassword, etUsername,
          imgLogo, tvForgot, tvLogin, tvShow, tvSignup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
